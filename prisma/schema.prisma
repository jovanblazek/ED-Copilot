// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_CONNECTION_STRING")
}

model Guild {
  id                  String    @id // Discord guild ID
  language            String    @default("en")
  timezone            String
  tickReportChannelId String?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime? @default(now()) @updatedAt

  guildFaction GuildFaction?
}

model User {
  id         String       @id // Discord user ID
  cmdrName   String
  edsmApiKey String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @default(now()) @updatedAt
}

model GuildFaction {
  id                    Int       @id @default(autoincrement())
  guildId               String    @unique
  factionId             Int
  shortName             String
  notificationChannelId String?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime? @default(now()) @updatedAt

  faction Faction @relation(fields: [factionId], references: [id])
  guild   Guild   @relation(fields: [guildId], references: [id], onDelete: Cascade)

  @@index([guildId, factionId])
}

model Faction {
  id        Int       @id @default(autoincrement())
  name      String
  ebgsId    String    @unique
  eddbId    Int       @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime? @default(now()) @updatedAt

  factionStates FactionState[]
  guildFactions GuildFaction[]

  @@index([eddbId, ebgsId, name])
}

enum StateType {
  Pending
  Active
  Recovering
}

model FactionState {
  id         BigInt    @id @default(autoincrement())
  factionId  Int
  systemName String
  stateName  String
  stateType  StateType
  startedAt  DateTime
  endedAt    DateTime?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @default(now()) @updatedAt

  faction Faction @relation(fields: [factionId], references: [id], onDelete: Cascade)

  @@index([factionId, systemName])
}
